(* DO NOT EDIT, GENERATED AUTOMATICALLY *)

open! Tf_core

(** RESOURCE SERIALIZATION *)

type actions__tagging = { status : string prop  (** status *) }

type actions = {
  tagging : actions__tagging list;
      [@default []] [@yojson_drop_default Stdlib.( = )]
      (** tagging *)
}

type protected_resource__s3_bucket

val protected_resource__s3_bucket :
  ?object_prefixes:string prop list ->
  bucket_name:string prop ->
  unit ->
  protected_resource__s3_bucket

type protected_resource

val protected_resource :
  ?s3_bucket:protected_resource__s3_bucket list ->
  unit ->
  protected_resource

type aws_guardduty_malware_protection_plan

val aws_guardduty_malware_protection_plan :
  ?actions:actions list ->
  ?tags:string prop Tf_core.assoc ->
  ?protected_resource:protected_resource list ->
  role:string prop ->
  unit ->
  aws_guardduty_malware_protection_plan

val yojson_of_aws_guardduty_malware_protection_plan :
  aws_guardduty_malware_protection_plan -> json

(** RESOURCE REGISTRATION *)

type t = private {
  tf_name : string;
  actions : actions list prop;
  arn : string prop;
  created_at : string prop;
  id : string prop;
  role : string prop;
  status : string prop;
  tags : string Tf_core.assoc prop;
  tags_all : string Tf_core.assoc prop;
}

val register :
  ?tf_module:tf_module ->
  ?actions:actions list ->
  ?tags:string prop Tf_core.assoc ->
  ?protected_resource:protected_resource list ->
  role:string prop ->
  string ->
  t

val make :
  ?actions:actions list ->
  ?tags:string prop Tf_core.assoc ->
  ?protected_resource:protected_resource list ->
  role:string prop ->
  string ->
  t Tf_core.resource
