(* DO NOT EDIT, GENERATED AUTOMATICALLY *)

[@@@ocaml.warning "-33-27-26"]

open Tf.Prelude

type google_cloud_run_domain_mapping__metadata = {
  annotations : (string * string) list option; [@option]
      (** Annotations is a key value map stored with a resource that
may be set by external tools to store and retrieve arbitrary metadata. More
info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations

**Note**: The Cloud Run API may add additional annotations that were not provided in your config.
If terraform plan shows a diff where a server-side annotation is added, you can add it to your config
or apply the lifecycle.ignore_changes rule to the metadata.0.annotations field.

**Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
Please refer to the field 'effective_annotations' for all of the annotations present on the resource. *)
  effective_annotations : (string * string) list;
      (** All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through Terraform, other clients and services. *)
  effective_labels : (string * string) list;
      (** All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other clients and services. *)
  generation : float;
      (** A sequence number representing a specific generation of the desired state. *)
  labels : (string * string) list option; [@option]
      (** Map of string keys and values that can be used to organize and categorize
(scope and select) objects. May match selectors of replication controllers
and routes.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels

**Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
Please refer to the field 'effective_labels' for all of the labels present on the resource. *)
  namespace : string;
      (** In Cloud Run the namespace must be equal to either the
project ID or project number. *)
  resource_version : string;
      (** An opaque value that represents the internal version of this object that
can be used by clients to determine when objects have changed. May be used
for optimistic concurrency, change detection, and the watch operation on a
resource or set of resources. They may only be valid for a
particular resource or set of resources.

More info:
https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency *)
  self_link : string;
      (** SelfLink is a URL representing this object. *)
  terraform_labels : (string * string) list;
      (** The combination of labels configured directly on the resource
 and default labels configured on the provider. *)
  uid : string;
      (** UID is a unique id generated by the server on successful creation of a resource and is not
allowed to change on PUT operations.

More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids *)
}
[@@deriving yojson_of]
(** Metadata associated with this DomainMapping. *)

type google_cloud_run_domain_mapping__spec = {
  certificate_mode : string option; [@option]
      (** The mode of the certificate. Default value: AUTOMATIC Possible values: [NONE, AUTOMATIC] *)
  force_override : bool option; [@option]
      (** If set, the mapping will override any mapping set before this spec was set.
It is recommended that the user leaves this empty to receive an error
warning about a potential conflict and only set it once the respective UI
has given such a warning. *)
  route_name : string;
      (** The name of the Cloud Run Service that this DomainMapping applies to.
The route must exist. *)
}
[@@deriving yojson_of]
(** The spec for this DomainMapping. *)

type google_cloud_run_domain_mapping__timeouts = {
  create : string option; [@option]  (** create *)
  delete : string option; [@option]  (** delete *)
}
[@@deriving yojson_of]
(** google_cloud_run_domain_mapping__timeouts *)

type google_cloud_run_domain_mapping__status__resource_records = {
  name : string;  (** name *)
  rrdata : string;  (** rrdata *)
  type_ : string; [@key "type"]  (** type *)
}
[@@deriving yojson_of]

type google_cloud_run_domain_mapping__status__conditions = {
  message : string;  (** message *)
  reason : string;  (** reason *)
  status : string;  (** status *)
  type_ : string; [@key "type"]  (** type *)
}
[@@deriving yojson_of]

type google_cloud_run_domain_mapping__status = {
  conditions :
    google_cloud_run_domain_mapping__status__conditions list;
      (** conditions *)
  mapped_route_name : string;  (** mapped_route_name *)
  observed_generation : float;  (** observed_generation *)
  resource_records :
    google_cloud_run_domain_mapping__status__resource_records list;
      (** resource_records *)
}
[@@deriving yojson_of]

type google_cloud_run_domain_mapping = {
  location : string;
      (** The location of the cloud run instance. eg us-central1 *)
  name : string;
      (** Name should be a [verified](https://support.google.com/webmasters/answer/9008080) domain *)
  metadata : google_cloud_run_domain_mapping__metadata list;
  spec : google_cloud_run_domain_mapping__spec list;
  timeouts : google_cloud_run_domain_mapping__timeouts option;
}
[@@deriving yojson_of]
(** google_cloud_run_domain_mapping *)

let google_cloud_run_domain_mapping ?timeouts ~location ~name
    ~metadata ~spec __resource_id =
  let __resource_type = "google_cloud_run_domain_mapping" in
  let __resource = { location; name; metadata; spec; timeouts } in
  Resource.add ~type_:__resource_type ~id:__resource_id
    (yojson_of_google_cloud_run_domain_mapping __resource);
  ()
