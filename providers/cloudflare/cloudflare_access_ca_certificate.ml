(* DO NOT EDIT, GENERATED AUTOMATICALLY *)

[@@@ocaml.warning "-33-27-26"]

open! Tf.Prelude

type cloudflare_access_ca_certificate = {
  account_id : string prop option; [@option]
      (** The account identifier to target for the resource. Conflicts with `zone_id`. *)
  application_id : string prop;
      (** The Access Application ID to associate with the CA certificate. *)
  id : string prop option; [@option]  (** id *)
  zone_id : string prop option; [@option]
      (** The zone identifier to target for the resource. Conflicts with `account_id`. *)
}
[@@deriving yojson_of]
(** Cloudflare Access can replace traditional SSH key models with
short-lived certificates issued to your users based on the token
generated by their Access login.
 *)

type t = {
  account_id : string prop;
  application_id : string prop;
  aud : string prop;
  id : string prop;
  public_key : string prop;
  zone_id : string prop;
}

let cloudflare_access_ca_certificate ?account_id ?id ?zone_id
    ~application_id __resource_id =
  let __resource_type = "cloudflare_access_ca_certificate" in
  let __resource =
    ({ account_id; application_id; id; zone_id }
      : cloudflare_access_ca_certificate)
  in
  Resource.add ~type_:__resource_type ~id:__resource_id
    (yojson_of_cloudflare_access_ca_certificate __resource);
  let __resource_attributes =
    ({
       account_id =
         Prop.computed __resource_type __resource_id "account_id";
       application_id =
         Prop.computed __resource_type __resource_id "application_id";
       aud = Prop.computed __resource_type __resource_id "aud";
       id = Prop.computed __resource_type __resource_id "id";
       public_key =
         Prop.computed __resource_type __resource_id "public_key";
       zone_id =
         Prop.computed __resource_type __resource_id "zone_id";
     }
      : t)
  in
  __resource_attributes
