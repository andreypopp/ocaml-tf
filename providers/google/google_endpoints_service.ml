(* DO NOT EDIT, GENERATED AUTOMATICALLY *)

open! Tf_core

type timeouts = {
  create : string prop option; [@option]  (** create *)
  delete : string prop option; [@option]  (** delete *)
  update : string prop option; [@option]  (** update *)
}
[@@deriving yojson_of]
(** timeouts *)

type apis__methods = {
  name : string prop;  (** name *)
  request_type : string prop;  (** request_type *)
  response_type : string prop;  (** response_type *)
  syntax : string prop;  (** syntax *)
}
[@@deriving yojson_of]

type apis = {
  methods : apis__methods list;  (** methods *)
  name : string prop;  (** name *)
  syntax : string prop;  (** syntax *)
  version : string prop;  (** version *)
}
[@@deriving yojson_of]

type endpoints = {
  address : string prop;  (** address *)
  name : string prop;  (** name *)
}
[@@deriving yojson_of]

type google_endpoints_service = {
  grpc_config : string prop option; [@option]
      (** The full text of the Service Config YAML file (Example located here). If provided, must also provide protoc_output_base64. open_api config must not be provided. *)
  id : string prop option; [@option]  (** id *)
  openapi_config : string prop option; [@option]
      (** The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and protoc_output_base64 must be specified. *)
  project : string prop option; [@option]
      (** The project ID that the service belongs to. If not provided, provider project is used. *)
  protoc_output_base64 : string prop option; [@option]
      (** The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file, base64-encoded. *)
  service_name : string prop;
      (** The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog. *)
  timeouts : timeouts option;
}
[@@deriving yojson_of]
(** google_endpoints_service *)

let timeouts ?create ?delete ?update () : timeouts =
  { create; delete; update }

let google_endpoints_service ?grpc_config ?id ?openapi_config
    ?project ?protoc_output_base64 ?timeouts ~service_name () :
    google_endpoints_service =
  {
    grpc_config;
    id;
    openapi_config;
    project;
    protoc_output_base64;
    service_name;
    timeouts;
  }

type t = {
  apis : apis list prop;
  config_id : string prop;
  dns_address : string prop;
  endpoints : endpoints list prop;
  grpc_config : string prop;
  id : string prop;
  openapi_config : string prop;
  project : string prop;
  protoc_output_base64 : string prop;
  service_name : string prop;
}

let make ?grpc_config ?id ?openapi_config ?project
    ?protoc_output_base64 ?timeouts ~service_name __id =
  let __type = "google_endpoints_service" in
  let __attrs =
    ({
       apis = Prop.computed __type __id "apis";
       config_id = Prop.computed __type __id "config_id";
       dns_address = Prop.computed __type __id "dns_address";
       endpoints = Prop.computed __type __id "endpoints";
       grpc_config = Prop.computed __type __id "grpc_config";
       id = Prop.computed __type __id "id";
       openapi_config = Prop.computed __type __id "openapi_config";
       project = Prop.computed __type __id "project";
       protoc_output_base64 =
         Prop.computed __type __id "protoc_output_base64";
       service_name = Prop.computed __type __id "service_name";
     }
      : t)
  in
  {
    Tf_core.id = __id;
    type_ = __type;
    json =
      yojson_of_google_endpoints_service
        (google_endpoints_service ?grpc_config ?id ?openapi_config
           ?project ?protoc_output_base64 ?timeouts ~service_name ());
    attrs = __attrs;
  }

let register ?tf_module ?grpc_config ?id ?openapi_config ?project
    ?protoc_output_base64 ?timeouts ~service_name __id =
  let (r : _ Tf_core.resource) =
    make ?grpc_config ?id ?openapi_config ?project
      ?protoc_output_base64 ?timeouts ~service_name __id
  in
  Resource.add ?tf_module ~type_:r.type_ ~id:r.id r.json;
  r.attrs
