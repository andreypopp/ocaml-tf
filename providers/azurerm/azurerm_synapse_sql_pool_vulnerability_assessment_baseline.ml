(* DO NOT EDIT, GENERATED AUTOMATICALLY *)

open! Tf_core

type baseline = { result : string prop list }
[@@deriving_inline yojson_of]

let _ = fun (_ : baseline) -> ()

let yojson_of_baseline =
  (function
   | { result = v_result } ->
       let bnds : (string * Ppx_yojson_conv_lib.Yojson.Safe.t) list =
         []
       in
       let bnds =
         let arg =
           yojson_of_list (yojson_of_prop yojson_of_string) v_result
         in
         ("result", arg) :: bnds
       in
       `Assoc bnds
    : baseline -> Ppx_yojson_conv_lib.Yojson.Safe.t)

let _ = yojson_of_baseline

[@@@deriving.end]

type timeouts = {
  create : string prop option; [@option]
  delete : string prop option; [@option]
  read : string prop option; [@option]
  update : string prop option; [@option]
}
[@@deriving_inline yojson_of]

let _ = fun (_ : timeouts) -> ()

let yojson_of_timeouts =
  (function
   | {
       create = v_create;
       delete = v_delete;
       read = v_read;
       update = v_update;
     } ->
       let bnds : (string * Ppx_yojson_conv_lib.Yojson.Safe.t) list =
         []
       in
       let bnds =
         match v_update with
         | Ppx_yojson_conv_lib.Option.None -> bnds
         | Ppx_yojson_conv_lib.Option.Some v ->
             let arg = yojson_of_prop yojson_of_string v in
             let bnd = "update", arg in
             bnd :: bnds
       in
       let bnds =
         match v_read with
         | Ppx_yojson_conv_lib.Option.None -> bnds
         | Ppx_yojson_conv_lib.Option.Some v ->
             let arg = yojson_of_prop yojson_of_string v in
             let bnd = "read", arg in
             bnd :: bnds
       in
       let bnds =
         match v_delete with
         | Ppx_yojson_conv_lib.Option.None -> bnds
         | Ppx_yojson_conv_lib.Option.Some v ->
             let arg = yojson_of_prop yojson_of_string v in
             let bnd = "delete", arg in
             bnd :: bnds
       in
       let bnds =
         match v_create with
         | Ppx_yojson_conv_lib.Option.None -> bnds
         | Ppx_yojson_conv_lib.Option.Some v ->
             let arg = yojson_of_prop yojson_of_string v in
             let bnd = "create", arg in
             bnd :: bnds
       in
       `Assoc bnds
    : timeouts -> Ppx_yojson_conv_lib.Yojson.Safe.t)

let _ = yojson_of_timeouts

[@@@deriving.end]

type azurerm_synapse_sql_pool_vulnerability_assessment_baseline = {
  id : string prop option; [@option]
  name : string prop;
  rule_name : string prop;
  sql_pool_vulnerability_assessment_id : string prop;
  baseline : baseline list;
  timeouts : timeouts option;
}
[@@deriving_inline yojson_of]

let _ =
 fun (_ : azurerm_synapse_sql_pool_vulnerability_assessment_baseline) ->
  ()

let yojson_of_azurerm_synapse_sql_pool_vulnerability_assessment_baseline
    =
  (function
   | {
       id = v_id;
       name = v_name;
       rule_name = v_rule_name;
       sql_pool_vulnerability_assessment_id =
         v_sql_pool_vulnerability_assessment_id;
       baseline = v_baseline;
       timeouts = v_timeouts;
     } ->
       let bnds : (string * Ppx_yojson_conv_lib.Yojson.Safe.t) list =
         []
       in
       let bnds =
         let arg = yojson_of_option yojson_of_timeouts v_timeouts in
         ("timeouts", arg) :: bnds
       in
       let bnds =
         let arg = yojson_of_list yojson_of_baseline v_baseline in
         ("baseline", arg) :: bnds
       in
       let bnds =
         let arg =
           yojson_of_prop yojson_of_string
             v_sql_pool_vulnerability_assessment_id
         in
         ("sql_pool_vulnerability_assessment_id", arg) :: bnds
       in
       let bnds =
         let arg = yojson_of_prop yojson_of_string v_rule_name in
         ("rule_name", arg) :: bnds
       in
       let bnds =
         let arg = yojson_of_prop yojson_of_string v_name in
         ("name", arg) :: bnds
       in
       let bnds =
         match v_id with
         | Ppx_yojson_conv_lib.Option.None -> bnds
         | Ppx_yojson_conv_lib.Option.Some v ->
             let arg = yojson_of_prop yojson_of_string v in
             let bnd = "id", arg in
             bnd :: bnds
       in
       `Assoc bnds
    : azurerm_synapse_sql_pool_vulnerability_assessment_baseline ->
      Ppx_yojson_conv_lib.Yojson.Safe.t)

let _ =
  yojson_of_azurerm_synapse_sql_pool_vulnerability_assessment_baseline

[@@@deriving.end]

let baseline ~result () : baseline = { result }

let timeouts ?create ?delete ?read ?update () : timeouts =
  { create; delete; read; update }

let azurerm_synapse_sql_pool_vulnerability_assessment_baseline ?id
    ?(baseline = []) ?timeouts ~name ~rule_name
    ~sql_pool_vulnerability_assessment_id () :
    azurerm_synapse_sql_pool_vulnerability_assessment_baseline =
  {
    id;
    name;
    rule_name;
    sql_pool_vulnerability_assessment_id;
    baseline;
    timeouts;
  }

type t = {
  tf_name : string;
  id : string prop;
  name : string prop;
  rule_name : string prop;
  sql_pool_vulnerability_assessment_id : string prop;
}

let make ?id ?(baseline = []) ?timeouts ~name ~rule_name
    ~sql_pool_vulnerability_assessment_id __id =
  let __type =
    "azurerm_synapse_sql_pool_vulnerability_assessment_baseline"
  in
  let __attrs =
    ({
       tf_name = __id;
       id = Prop.computed __type __id "id";
       name = Prop.computed __type __id "name";
       rule_name = Prop.computed __type __id "rule_name";
       sql_pool_vulnerability_assessment_id =
         Prop.computed __type __id
           "sql_pool_vulnerability_assessment_id";
     }
      : t)
  in
  {
    Tf_core.id = __id;
    type_ = __type;
    json =
      yojson_of_azurerm_synapse_sql_pool_vulnerability_assessment_baseline
        (azurerm_synapse_sql_pool_vulnerability_assessment_baseline
           ?id ~baseline ?timeouts ~name ~rule_name
           ~sql_pool_vulnerability_assessment_id ());
    attrs = __attrs;
  }

let register ?tf_module ?id ?(baseline = []) ?timeouts ~name
    ~rule_name ~sql_pool_vulnerability_assessment_id __id =
  let (r : _ Tf_core.resource) =
    make ?id ~baseline ?timeouts ~name ~rule_name
      ~sql_pool_vulnerability_assessment_id __id
  in
  Resource.add ?tf_module ~type_:r.type_ ~id:r.id r.json;
  r.attrs
